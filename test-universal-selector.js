const puppeteer = require('puppeteer');
const fs = require('fs');
const path = require('path');
const { findByPartialClass, findWatchersNumber, findAllByPartialClass } = require('./universal-selector');

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ –Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö HTML —Ñ–∞–π–ª–∞—Ö
 */
async function testUniversalSelector() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ –¥–ª—è CSS Modules...\n');
    
    const debugDir = path.join(__dirname, 'debug');
    const htmlFiles = fs.readdirSync(debugDir).filter(f => f.endsWith('.html'));
    
    if (htmlFiles.length === 0) {
        console.log('‚ùå HTML —Ñ–∞–π–ª—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        return;
    }
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ ${htmlFiles.length} HTML —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:`);
    htmlFiles.forEach((file, index) => {
        console.log(`${index + 1}. ${file}`);
    });
    console.log('');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
    const browser = await puppeteer.launch({ headless: true });
    
    try {
        for (const file of htmlFiles) {
            const symbol = file.match(/debug_([A-Z]+)_/)?.[1] || 'UNKNOWN';
            console.log(`\n${'='.repeat(60)}`);
            console.log(`üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: ${symbol} (${file})`);
            console.log(`${'='.repeat(60)}\n`);
            
            const htmlPath = path.join(debugDir, file);
            const page = await browser.newPage();
            
            try {
                // –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π HTML —Ñ–∞–π–ª
                await page.goto(`file://${htmlPath}`, { waitUntil: 'domcontentloaded' });
                
                console.log(`üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª: ${htmlPath}\n`);
                
                // –¢–ï–°–¢ 1: –ü–æ–∏—Å–∫ —Å –ø–æ–º–æ—â—å—é findWatchersNumber (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫)
                console.log('üéØ –¢–ï–°–¢ 1: –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ —á–∏—Å–ª–∞ watchers');
                const watchersNumber = await findWatchersNumber(page, symbol);
                
                if (watchersNumber) {
                    console.log(`‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${watchersNumber}`);
                } else {
                    console.log('‚ùå –ß–∏—Å–ª–æ watchers –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º –º–µ—Ç–æ–¥–æ–º');
                }
                
                console.log('\n' + '-'.repeat(40) + '\n');
                
                // –¢–ï–°–¢ 2: –ü–æ–∏—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
                console.log('üîç –¢–ï–°–¢ 2: –ü–æ–∏—Å–∫ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º');
                
                const patterns = [
                    'SymbolHeader_watchers__',
                    'SymbolWatchers_watchers__',
                    'WatchersCount_',
                    'Watchers_'
                ];
                
                for (const pattern of patterns) {
                    console.log(`\nüîé –ü–∞—Ç—Ç–µ—Ä–Ω: "${pattern}"`);
                    const result = await findByPartialClass(page, pattern, true);
                    
                    if (result) {
                        if (typeof result === 'string') {
                            console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ —á–∏—Å–ª–æ: ${result}`);
                        } else if (result.found) {
                            console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç: ${result.className}`);
                            console.log(`   üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: "${result.textContent}"`);
                        }
                    } else {
                        console.log(`   ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ`);
                    }
                }
                
                console.log('\n' + '-'.repeat(40) + '\n');
                
                // –¢–ï–°–¢ 3: –ü–æ–∏—Å–∫ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å "watchers" –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∫–ª–∞—Å—Å–∞
                console.log('üîç –¢–ï–°–¢ 3: –ü–æ–∏—Å–∫ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö "watchers"');
                await findAllByPartialClass(page, 'watchers');
                
                console.log('\n' + '-'.repeat(40) + '\n');
                
                // –¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∂–∏–¥–∞–µ–º—ã–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                console.log('üéØ –¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∂–∏–¥–∞–µ–º—ã—Ö —á–∏—Å–µ–ª');
                const expectedNumbers = {
                    'CLSK': '51,527',
                    'HIVE': '24,593'
                };
                
                if (expectedNumbers[symbol]) {
                    const expected = expectedNumbers[symbol];
                    console.log(`–û–∂–∏–¥–∞–µ–º–æ–µ —á–∏—Å–ª–æ –¥–ª—è ${symbol}: ${expected}`);
                    
                    if (watchersNumber === expected) {
                        console.log(`‚úÖ –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ!`);
                    } else {
                        console.log(`‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ: "${watchersNumber}", –æ–∂–∏–¥–∞–ª–æ—Å—å: "${expected}"`);
                        
                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ —á–∏—Å–ª–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
                        const hasExpected = await page.evaluate((expected) => {
                            return document.body.textContent.includes(expected);
                        }, expected);
                        
                        if (hasExpected) {
                            console.log(`üìã –û–∂–∏–¥–∞–µ–º–æ–µ —á–∏—Å–ª–æ "${expected}" –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ`);
                        } else {
                            console.log(`‚ùå –û–∂–∏–¥–∞–µ–º–æ–µ —á–∏—Å–ª–æ "${expected}" –ù–ï –Ω–∞–π–¥–µ–Ω–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ`);
                        }
                    }
                } else {
                    console.log(`–î–ª—è ${symbol} —ç—Ç–∞–ª–æ–Ω–Ω–æ–µ —á–∏—Å–ª–æ –Ω–µ –∏–∑–≤–µ—Å—Ç–Ω–æ`);
                }
                
            } catch (error) {
                console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞ ${file}:`, error.message);
            } finally {
                await page.close();
            }
        }
        
        console.log(`\n${'='.repeat(60)}`);
        console.log('üèÅ –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø');
        console.log(`${'='.repeat(60)}\n`);
        
        console.log('‚úÖ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è findByPartialClass —Å–æ–∑–¥–∞–Ω–∞');
        console.log('‚úÖ –§—É–Ω–∫—Ü–∏—è findWatchersNumber –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏');
        console.log('‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ CSS Modules —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ —Å—É—Ñ—Ñ–∏–∫—Å–∞–º–∏');
        console.log('‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —á–∏—Å–µ–ª –∏–∑ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤');
        console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —á–∏—Å–µ–ª –≤ —Ä–∞–∑—É–º–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ –¥–ª—è watchers');
        
    } finally {
        await browser.close();
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if (require.main === module) {
    testUniversalSelector().catch(console.error);
}

module.exports = { testUniversalSelector };