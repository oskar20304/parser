const fs = require('fs');
const path = require('path');

// –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–æ—á–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –ø–æ–∏—Å–∫–∞ –¥–ª—è —Ñ–∞–π–ª–∞ MARA
function findMaraWatchers() {
    console.log('üéØ –ü–æ–∏—Å–∫ watchers –≤ —Ñ–∞–π–ª–∞—Ö MARA –∏—Å–ø–æ–ª—å–∑—É—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º...\n');
    
    const debugDir = path.join(__dirname, 'debug');
    const maraFiles = fs.readdirSync(debugDir).filter(f => f.includes('MARA'));
    
    if (maraFiles.length === 0) {
        console.log('‚ùå –§–∞–π–ª—ã MARA –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        return;
    }
    
    maraFiles.forEach((file, index) => {
        console.log(`üìÅ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª ${index + 1}/${maraFiles.length}: ${file}\n`);
        
        const htmlContent = fs.readFileSync(path.join(debugDir, file), 'utf8');
        
        // –ê–õ–ì–û–†–ò–¢–ú 1: –ü–æ–∏—Å–∫ —Ç–æ—á–Ω–æ–≥–æ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ SymbolHeader_watchers__nFkZq
        console.log('üîç –ê–ª–≥–æ—Ä–∏—Ç–º 1: –ü–æ–∏—Å–∫ –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É ".SymbolHeader_watchers__nFkZq"');
        
        if (htmlContent.includes('SymbolHeader_watchers__nFkZq')) {
            console.log('‚úÖ –ù–∞–π–¥–µ–Ω CSS –∫–ª–∞—Å—Å SymbolHeader_watchers__nFkZq');
            
            // –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å —ç—Ç–∏–º –∫–ª–∞—Å—Å–æ–º
            const regex = /class="[^"]*SymbolHeader_watchers__nFkZq[^"]*"[^>]*>([^<]*)</g;
            const matches = [...htmlContent.matchAll(regex)];
            
            matches.forEach((match, i) => {
                const content = match[1].trim();
                console.log(`   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ ${i + 1}: "${content}"`);
                
                // –ò—â–µ–º —á–∏—Å–ª–æ –≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º
                const numberMatch = content.match(/\d{1,3}(,\d{3})*/);
                if (numberMatch) {
                    console.log(`   üéØ –ù–ê–ô–î–ï–ù–û –ß–ò–°–õ–û: ${numberMatch[0]}`);
                } else {
                    console.log('   ‚ö†Ô∏è –ß–∏—Å–ª–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –ø—Ä—è–º–æ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–º');
                }
            });
            
            if (matches.length === 0) {
                console.log('   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —ç–ª–µ–º–µ–Ω—Ç–∞');
            }
            
        } else {
            console.log('‚ùå CSS –∫–ª–∞—Å—Å SymbolHeader_watchers__nFkZq –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
        
        console.log('');
        
        // –ê–õ–ì–û–†–ò–¢–ú 2: –ü–æ–∏—Å–∫ –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É —Ä—è–¥–æ–º —Å SymbolHeader_watchButton__E_8Jz
        console.log('üîç –ê–ª–≥–æ—Ä–∏—Ç–º 2: –ü–æ–∏—Å–∫ —Ä—è–¥–æ–º —Å –∫–Ω–æ–ø–∫–æ–π Watch');
        
        if (htmlContent.includes('SymbolHeader_watchButton__E_8Jz')) {
            console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ Watch (SymbolHeader_watchButton__E_8Jz)');
            
            // –ò—â–µ–º —á–∏—Å–ª–∞ –ø–µ—Ä–µ–¥ –∫–Ω–æ–ø–∫–æ–π Watch –≤ —Ä–∞–¥–∏—É—Å–µ 200 —Å–∏–º–≤–æ–ª–æ–≤
            const buttonIndex = htmlContent.indexOf('SymbolHeader_watchButton__E_8Jz');
            const contextBefore = htmlContent.substring(Math.max(0, buttonIndex - 200), buttonIndex);
            
            console.log('   –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –∫–Ω–æ–ø–∫–æ–π:', contextBefore.slice(-100) + '...');
            
            // –ò—â–µ–º —á–∏—Å–ª–∞ –≤ —ç—Ç–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
            const numbersInContext = contextBefore.match(/\d{1,3}(,\d{3})*/g);
            if (numbersInContext) {
                const validNumbers = numbersInContext.filter(num => {
                    const value = parseInt(num.replace(/,/g, ''));
                    return value >= 1000 && value <= 500000; // –†–∞–∑—É–º–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è watchers
                });
                
                if (validNumbers.length > 0) {
                    console.log(`   üéØ –ù–ê–ô–î–ï–ù–ù–´–ï –ß–ò–°–õ–ê: ${validNumbers.join(', ')}`);
                    console.log(`   ‚≠ê –ù–ê–ò–ë–û–õ–ï–ï –í–ï–†–û–Ø–¢–ù–û–ï: ${validNumbers[validNumbers.length - 1]} (–±–ª–∏–∂–∞–π—à–µ–µ –∫ –∫–Ω–æ–ø–∫–µ)`);
                } else {
                    console.log('   ‚ö†Ô∏è –ü–æ–¥—Ö–æ–¥—è—â–∏–µ —á–∏—Å–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ');
                }
            } else {
                console.log('   ‚ö†Ô∏è –ß–∏—Å–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–µ—Ä–µ–¥ –∫–Ω–æ–ø–∫–æ–π');
            }
            
        } else {
            console.log('‚ùå –ö–Ω–æ–ø–∫–∞ Watch –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
        
        console.log('');
        
        // –ê–õ–ì–û–†–ò–¢–ú 3: –ü–æ–∏—Å–∫ –≤—Å–µ—Ö —á–∏—Å–µ–ª –≤ —Ä–∞–∑—É–º–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ watchers
        console.log('üîç –ê–ª–≥–æ—Ä–∏—Ç–º 3: –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª watchers');
        
        const allNumbers = htmlContent.match(/\d{1,3}(,\d{3})*/g) || [];
        const potentialWatchers = allNumbers
            .map(num => ({
                number: num,
                value: parseInt(num.replace(/,/g, ''))
            }))
            .filter(item => item.value >= 5000 && item.value <= 200000) // –î–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è MARA
            .sort((a, b) => a.value - b.value);
        
        if (potentialWatchers.length > 0) {
            console.log(`   –ù–∞–π–¥–µ–Ω–æ ${potentialWatchers.length} –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª watchers:`);
            potentialWatchers.forEach((item, i) => {
                console.log(`   ${i + 1}. ${item.number} (${item.value})`);
            });
            
            // –í—ã–±–∏—Ä–∞–µ–º –Ω–∞–∏–±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω–æ–µ (—Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ)
            const middleIndex = Math.floor(potentialWatchers.length / 2);
            console.log(`   ‚≠ê –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: ${potentialWatchers[middleIndex].number}`);
        } else {
            console.log('   ‚ùå –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ watchers –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        }
        
        console.log('\n' + '='.repeat(80) + '\n');
    });
}

// –ó–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞
findMaraWatchers();